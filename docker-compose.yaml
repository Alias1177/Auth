services:
  auth-app:
    container_name: auth-app
    build: .
    command: ["./auth-app", "-migrate"]  # Запуск с флагом миграции
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "admin", "-d", "mydb" ]
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9092:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    depends_on:
      - postgres
      - redis

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Zookeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka service
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "29092:29092" # Новый порт для подключения из внешней сети
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://194.87.95.28:29092  # Укажите внешний IP сервера 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092   # Ожидает подключения на 29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "29092" ]
      interval: 10s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
  grafana_data: