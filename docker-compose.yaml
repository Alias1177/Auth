services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: auth-service
    restart: always
    ports:
      - "8081:8080"
    environment:
      - DATABASE_DSN=postgres://admin:secret@postgres:5432/mydb?sslmode=disable
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=your-secret-key-here-change-in-production
      - APP_ENV=development
      # Внешние сервисы на хосте 31.97.76.108
      - KAFKA_BROKER_ADDRESS=31.97.76.108:9092
      - KAFKA_EMAIL_TOPIC=notifications
      - NOTIFICATION_SERVICE_URL=http://31.97.76.108:8080
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
    volumes:
      - ./db/migrations:/app/db/migrations
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    user: "1000:1000"

  postgres:
    image: postgres:latest
    container_name: postgres_auth
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "admin", "-d", "mydb" ]
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:latest
    container_name: redis_auth
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes", "--replica-read-only", "no"]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3







volumes:
  postgres_data:
  redis_data: