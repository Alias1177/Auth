name: Deploy Auth CI/CD

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/auth-deploy"

      - name: Create .env file on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.ENV_FILE_CONTENTS }}" > ~/auth-deploy/.env
            chmod 600 ~/auth-deploy/.env

      - name: Deploy on server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/auth-deploy
            
            # Остановка и удаление всех контейнеров
            docker compose down
            
            # Сборка контейнеров
            docker compose build
            
            # Запускаем только базу данных и другие зависимые сервисы (без auth-app)
            docker compose up -d postgres redis prometheus grafana
            
            # Ждем, пока PostgreSQL полностью запустится
            echo "Ожидание готовности PostgreSQL..."
            docker compose exec -T postgres sh -c 'until pg_isready -U admin -d mydb; do sleep 2; done'
            
            # Запуск временного контейнера для миграций
            echo "Запуск миграций..."
            docker compose run --rm --entrypoint "./auth-app -migrate" auth-app
            
            # Теперь запускаем основной сервис auth-app
            docker compose up -d auth-app
            
            # Проверка статуса контейнеров
            docker compose ps
            
            # Проверка логов auth-app
            docker compose logs --tail 10 auth-app
            
            # перезапустить systemd сервис, если используется
            sudo systemctl restart auth || true