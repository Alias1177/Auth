name: Deploy Auth CI/CD

on:
  push:
    branches: [ "mainReadyTrade", "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home
            
            echo "=== Starting complete deployment ==="
            
            # Останавливаем и удаляем все контейнеры
            if [ -d "Auth" ]; then
              cd Auth
              docker-compose down -v
              cd ..
            fi
            
            # Полностью удаляем старую директорию
            echo "=== Removing old Auth directory ==="
            rm -rf Auth
            
            # Клонируем заново с чистого репозитория
            echo "=== Cloning fresh repository ==="
            git clone https://github.com/Alias1177/Auth.git
            cd Auth
            
            # Создаем чистый .env файл из секретов
            echo "=== Creating .env file ==="
            echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env
            chmod 644 .env
            
            # Проверяем конфигурацию
            echo "=== Checking configuration ==="
            cat .env | grep -E "(KAFKA|NOTIFICATION)" || echo "No Kafka/Notification config found!"
            
            # Собираем и запускаем
            echo "=== Building and starting services ==="
            docker-compose up -d --build
            
            # Запускаем миграции
            echo "=== Running migrations ==="
            sleep 15
            docker-compose exec -T auth-service ./auth-app -migrate || true
            
            # Проверяем статус
            echo "=== Checking service status ==="
            sleep 5
            docker-compose ps
            
            # Проверяем логи
            echo "=== Auth Service Logs ==="
            docker-compose logs --tail=20 auth-service
            
            # Проверяем переменные окружения в контейнере
            echo "=== Checking container environment ==="
            docker-compose exec -T auth-service env | grep -E "(KAFKA|NOTIFICATION)" || echo "No Kafka/Notification env vars found!"
            
            echo "=== Deployment completed ==="