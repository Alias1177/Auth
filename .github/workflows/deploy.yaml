name: Deploy Auth CI/CD

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # клонирование репозитория (без .env, он в .gitignore)

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/auth-deploy"

      # создание .env на сервере из GitHub Secret
      - name: Create .env file on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.ENV_FILE_CONTENTS }}" > ~/auth-deploy/.env
            chmod 600 ~/auth-deploy/.env

      - name: Deploy on server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/auth-deploy
            docker compose down
            docker compose build
            docker compose up -d
            
            # Ждем несколько секунд для полного запуска контейнеров
            sleep 10
            
            # Запустить контейнер приложения с миграциями внутри Docker среды
            # Используем параметр -migrate для запуска миграций внутри контейнера
            # Это запустит миграцию в среде, где "postgres" разрешается как имя хоста
            docker compose exec -T auth-app ./auth-app -migrate
            
            # перезапустить systemd сервис, если используется
            sudo systemctl restart auth || true